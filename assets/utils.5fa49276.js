import{cq as U,fd as $,e0 as G,bW as N,t as g,fk as O,fl as P,bi as v,eM as d,al as b,r as B,aA as J,aB as y,fm as Z,aF as R,fn as p,aC as k,fo as x,fp as A}from"./index.a2b594ae.js";import{f as _,g as F}from"./projectionSupport.19c2bea2.js";const E=new U({esriSRUnit_Meter:"meters",esriSRUnit_Kilometer:"kilometers",esriSRUnit_Foot:"feet",esriSRUnit_StatuteMile:"miles",esriSRUnit_NauticalMile:"nautical-miles",esriSRUnit_USNauticalMile:"us-nautical-miles"}),h=Object.freeze({}),w=new R,L=new R,S=new R,m={esriGeometryPoint:p,esriGeometryPolyline:k,esriGeometryPolygon:x,esriGeometryMultipoint:A};function D(t,r,a,n=t.hasZ,i=t.hasM){if(g(r))return null;const o=t.hasZ&&n,s=t.hasM&&i;if(a){const e=y(S,r,t.hasZ,t.hasM,"esriGeometryPoint",a,n,i);return p(e,o,s)}return p(r,o,s)}function K(t,r,a,n,i,o,s=r,e=a){const l=r&&s,c=a&&e,u=B(n)?"coords"in n?n:n.geometry:null;if(g(u))return null;if(i){let f=J(L,u,r,a,t,i,s,e);return o&&(f=y(S,f,l,c,t,o)),m[t](f,l,c)}if(o){const f=y(S,u,r,a,t,o,s,e);return m[t](f,l,c)}return Z(w,u,r,a,s,e),m[t](w,l,c)}async function T(t,r,a){const{outFields:n,orderByFields:i,groupByFieldsForStatistics:o,outStatistics:s}=t;if(n)for(let e=0;e<n.length;e++)n[e]=n[e].trim();if(i)for(let e=0;e<i.length;e++)i[e]=i[e].trim();if(o)for(let e=0;e<o.length;e++)o[e]=o[e].trim();if(s)for(let e=0;e<s.length;e++)s[e].onStatisticField&&(s[e].onStatisticField=s[e].onStatisticField.trim());return t.geometry&&!t.outSR&&(t.outSR=t.geometry.spatialReference),j(t,r,a)}async function j(t,r,a){if(!t)return null;let{where:n}=t;if(t.where=n=n&&n.trim(),(!n||/^1 *= *1$/.test(n)||r&&r===n)&&(t.where=null),!t.geometry)return t;let i=await z(t);if(t.distance=0,t.units=null,t.spatialRel==="esriSpatialRelEnvelopeIntersects"){const{spatialReference:l}=t.geometry;i=$(i),i.spatialReference=l}t.geometry=i,await _(i.spatialReference,a);const o=(await G(N(i)))[0];if(g(o))throw h;const s=o.toJSON(),e=await F(s,s.spatialReference,a);if(!e)throw h;return e.spatialReference=a,t.geometry=e,t}async function z(t){const{geometry:r,distance:a,units:n}=t;if(a==null||"vertexAttributes"in r)return r;const i=r.spatialReference,o=n?E.fromJSON(n):O(i),s=i&&(P(i)||v(i))?r:await _(i,d).then(()=>F(r,d));return(await C())(s.spatialReference,s,a,o)}async function C(){return(await b(()=>import("./geometryEngineJSON.ba1441a3.js"),["geometryEngineJSON.ba1441a3.js","geometryEngineBase.0f0d7ecf.js","geometryEngineJSON.5a1f200e.js","json.8bd707cf.js"],import.meta.url)).geodesicBuffer}function W(t){return t&&M in t?JSON.parse(JSON.stringify(t,I)):t}const M="_geVersion",I=(t,r)=>t!==M?r:void 0;export{K as J,D as O,T as P,h as U,j as v,W as x};
