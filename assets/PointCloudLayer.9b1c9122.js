import{$ as r,a0 as i,a1 as f,cN as j,jm as I,ec as b,a_ as c,l5 as P,g$ as R,l6 as q,g_ as B,gZ as _,s as N,ep as E,eq as A,er as L,jk as O,es as V,jy as K,gF as v,je as k,r as D,aQ as M,jp as G,l7 as $,f as l,eC as U,U as Q,js as z,di as Z,d_ as H,jB as J,jP as W,bQ as X,jt as Y,ew as ee}from"./index.a2b594ae.js";import{A as te,K as x}from"./SceneService.c08f5ad9.js";import"./originUtils.10ab3775.js";import"./multiOriginJSONSupportUtils.2c03086c.js";import"./resourceUtils.a394d8e3.js";let u=class extends j{constructor(e){super(e),this.field=null,this.type=null}clone(){return console.warn(".clone() is not implemented for "+this.declaredClass),null}};r([i({type:String,json:{write:{enabled:!0,isRequired:!0}}})],u.prototype,"field",void 0),r([i({readOnly:!0,nonNullable:!0,json:{read:!1}})],u.prototype,"type",void 0),u=r([f("esri.layers.pointCloudFilters.PointCloudFilter")],u);const h=u;var m;let d=m=class extends h{constructor(e){super(e),this.requiredClearBits=null,this.requiredSetBits=null,this.type="bitfield"}clone(){return new m({field:this.field,requiredClearBits:c(this.requiredClearBits),requiredSetBits:c(this.requiredSetBits)})}};r([i({type:[I],json:{write:{enabled:!0,overridePolicy(){return{enabled:!0,isRequired:!this.requiredSetBits}}}}})],d.prototype,"requiredClearBits",void 0),r([i({type:[I],json:{write:{enabled:!0,overridePolicy(){return{enabled:!0,isRequired:!this.requiredClearBits}}}}})],d.prototype,"requiredSetBits",void 0),r([b({pointCloudBitfieldFilter:"bitfield"})],d.prototype,"type",void 0),d=m=r([f("esri.layers.pointCloudFilters.PointCloudBitfieldFilter")],d);const re=d;var g;let y=g=class extends h{constructor(e){super(e),this.includedReturns=[],this.type="return"}clone(){return new g({field:this.field,includedReturns:c(this.includedReturns)})}};r([i({type:[["firstOfMany","last","lastOfMany","single"]],json:{write:{enabled:!0,isRequired:!0}}})],y.prototype,"includedReturns",void 0),r([b({pointCloudReturnFilter:"return"})],y.prototype,"type",void 0),y=g=r([f("esri.layers.pointCloudFilters.PointCloudReturnFilter")],y);const ie=y;var w;let p=w=class extends h{constructor(e){super(e),this.mode="exclude",this.type="value",this.values=[]}clone(){return new w({field:this.field,mode:this.mode,values:c(this.values)})}};r([i({type:["exclude","include"],json:{write:{enabled:!0,isRequired:!0}}})],p.prototype,"mode",void 0),r([b({pointCloudValueFilter:"value"})],p.prototype,"type",void 0),r([i({type:[Number],json:{write:{enabled:!0,isRequired:!0}}})],p.prototype,"values",void 0),p=w=r([f("esri.layers.pointCloudFilters.PointCloudValueFilter")],p);const oe=p,se={key:"type",base:h,typeMap:{value:oe,bitfield:re,return:ie}},S={key:"type",base:P,typeMap:{"point-cloud-class-breaks":R,"point-cloud-rgb":q,"point-cloud-stretch":B,"point-cloud-unique-value":_},errorContext:"renderer"},C=N.getLogger("esri.layers.PointCloudLayer"),F=Y();let o=class extends te(E(A(L(O(V(K(ee))))))){constructor(...e){super(...e),this.operationalLayerType="PointCloudLayer",this.popupEnabled=!0,this.popupTemplate=null,this.opacity=1,this.filters=[],this.fields=null,this.fieldsIndex=null,this.outFields=null,this.path=null,this.legendEnabled=!0,this.renderer=null,this.type="point-cloud"}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}get defaultPopupTemplate(){return this.attributeStorageInfo?this.createPopupTemplate():null}getFieldDomain(e){const t=this.fieldsIndex.get(e);return t&&t.domain?t.domain:null}readServiceFields(e,t,n){return Array.isArray(e)?e.map(s=>{const a=new v;return s.type==="FieldTypeInteger"&&((s=c(s)).type="esriFieldTypeInteger"),a.read(s,n),a}):Array.isArray(t.attributeStorageInfo)?t.attributeStorageInfo.map(s=>new v({name:s.name,type:s.name==="ELEVATION"?"double":"integer"})):null}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}writeRenderer(e,t,n,s){k("layerDefinition.drawingInfo.renderer",e.write({},s),t)}load(e){const t=D(e)?e.signal:null,n=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(M).then(()=>this._fetchService(t));return this.addResolvingPromise(n),Promise.resolve(this)}createPopupTemplate(e){const t=G(this,e);return this._formatPopupTemplateReturnsField(t),this._formatPopupTemplateRGBField(t),t}_formatPopupTemplateReturnsField(e){const t=this.fieldsIndex.get("RETURNS");if(!t)return;const n=e.fieldInfos.find(a=>a.fieldName===t.name);if(!n)return;const s=new $({name:"pcl-returns-decoded",title:t.alias||t.name,expression:`
        var returnValue = $feature.${t.name};
        return (returnValue % 16) + " / " + Floor(returnValue / 16);
      `});e.expressionInfos=[...e.expressionInfos||[],s],n.fieldName="expression/pcl-returns-decoded"}_formatPopupTemplateRGBField(e){const t=this.fieldsIndex.get("RGB");if(!t)return;const n=e.fieldInfos.find(a=>a.fieldName===t.name);if(!n)return;const s=new $({name:"pcl-rgb-decoded",title:t.alias||t.name,expression:`
        var rgb = $feature.${t.name};
        var red = Floor(rgb / 65536, 0);
        var green = Floor((rgb - (red * 65536)) / 256,0);
        var blue = rgb - (red * 65536) - (green * 256);

        return "rgb(" + red + "," + green + "," + blue + ")";
      `});e.expressionInfos=[...e.expressionInfos||[],s],n.fieldName="expression/pcl-rgb-decoded"}async queryCachedStatistics(e,t){if(await this.load(t),!this.attributeStorageInfo)throw new l("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const n=this.fieldsIndex.get(e);if(!n)throw new l("pointcloudlayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const s of this.attributeStorageInfo)if(s.name===n.name){const a=U(this.parsedUrl.path,`./statistics/${s.key}`);return Q(a,{query:{f:"json",token:this.apiKey},responseType:"json",signal:t?t.signal:null}).then(T=>T.data)}throw new l("pointcloudlayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(x.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"point-cloud"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"point-cloud"};return this._debouncedSaveOperations(x.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="PointCloud")throw new l("pointcloudlayer:layer-type-not-supported","PointCloudLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new l("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"});if(this.version.major>2)throw new l("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"})}hasCachedStatistics(e){return this.attributeStorageInfo!=null&&this.attributeStorageInfo.some(t=>t.name===e)}_getTypeKeywords(){return["PointCloud"]}_validateElevationInfo(){const e=this.elevationInfo;e&&(e.mode!=="absolute-height"&&C.warn(".elevationInfo=","Point cloud layers only support absolute-height elevation mode"),e.featureExpressionInfo&&e.featureExpressionInfo.expression!=="0"&&C.warn(".elevationInfo=","Point cloud layers do not support featureExpressionInfo"))}};r([i({type:["PointCloudLayer"]})],o.prototype,"operationalLayerType",void 0),r([i(z)],o.prototype,"popupEnabled",void 0),r([i({type:Z,json:{name:"popupInfo",write:!0}})],o.prototype,"popupTemplate",void 0),r([i({readOnly:!0,json:{read:!1}})],o.prototype,"defaultPopupTemplate",null),r([i({readOnly:!0,json:{write:!1,read:!1,origins:{"web-document":{write:!1,read:!1}}}})],o.prototype,"opacity",void 0),r([i({type:["show","hide"]})],o.prototype,"listMode",void 0),r([i({types:[se],json:{origins:{service:{read:{source:"filters"}}},name:"layerDefinition.filters",write:!0}})],o.prototype,"filters",void 0),r([i({type:[v]})],o.prototype,"fields",void 0),r([i(F.fieldsIndex)],o.prototype,"fieldsIndex",void 0),r([H("service","fields",["fields","attributeStorageInfo"])],o.prototype,"readServiceFields",null),r([i(F.outFields)],o.prototype,"outFields",void 0),r([i({readOnly:!0})],o.prototype,"attributeStorageInfo",void 0),r([i(J)],o.prototype,"elevationInfo",null),r([i({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),r([i(W)],o.prototype,"legendEnabled",void 0),r([i({types:S,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:{target:{"layerDefinition.drawingInfo.renderer":{types:S},"layerDefinition.drawingInfo.transparency":{type:Number}}}}})],o.prototype,"renderer",void 0),r([X("renderer")],o.prototype,"writeRenderer",null),r([i({json:{read:!1},readOnly:!0})],o.prototype,"type",void 0),o=r([f("esri.layers.PointCloudLayer")],o);const ue=o;export{ue as default};
