import{$ as t,a0 as a,ar as w,bQ as T,a1 as u,cN as O,dz as x,ju as b,kr as N,a_ as R,ks as A,cx as L,bF as j,U as I,eD as S,ep as M,eq as J,er as D,jk as U,es as K,jy as V,am as P,cR as k,dm as z,bG as E,aQ as G,r as q,t as F,f as d,d_ as Q,jB as B,ew as C}from"./index.a2b594ae.js";import{w as m}from"./persistable.0ea93ced.js";import{A as W,K as g}from"./SceneService.c08f5ad9.js";import{s as H,l as X,u as Y,m as Z}from"./I3SLayerDefinitions.c86d5692.js";import"./multiOriginJSONSupportUtils.2c03086c.js";import"./originUtils.10ab3775.js";import"./resourceUtils.a394d8e3.js";var h;let n=h=class extends O{constructor(e){super(e),this.geometry=null,this.type="clip"}writeGeometry(e,i,r,s){if(s.layer&&s.layer.spatialReference&&!s.layer.spatialReference.equals(this.geometry.spatialReference)){if(!x(e.spatialReference,s.layer.spatialReference))return void(s&&s.messages&&s.messages.push(new b("scenemodification:unsupported","Scene modifications with incompatible spatial references are not supported",{modification:this,spatialReference:s.layer.spatialReference,context:s})));const l=new w;N(e,l,s.layer.spatialReference),i[r]=l.toJSON(s)}else i[r]=e.toJSON(s);delete i[r].spatialReference}clone(){return new h({geometry:R(this.geometry),type:this.type})}};t([a({type:w}),m()],n.prototype,"geometry",void 0),t([T(["web-scene","portal-item"],"geometry")],n.prototype,"writeGeometry",null),t([a({type:["clip","mask","replace"],nonNullable:!0}),m()],n.prototype,"type",void 0),n=h=t([u("esri.layers.support.SceneModification")],n);const c=n;var p;let y=p=class extends A(L.ofType(c)){constructor(e){super(e),this.url=null}clone(){return new p({url:this.url,items:this.items.map(e=>e.clone())})}toJSON(e){return this.toArray().map(i=>i.toJSON(e)).filter(i=>!!i.geometry)}static fromJSON(e,i){const r=new p;for(const s of e)r.add(c.fromJSON(s,i));return r}static async fromUrl(e,i,r){const s={url:j(e),origin:"service"},l=await I(e,{responseType:"json",signal:S(r,"signal")}),$=i.toJSON(),f=[];for(const v of l.data)f.push(c.fromJSON({...v,geometry:{...v.geometry,spatialReference:$}},s));return new p({url:e,items:f})}};t([a({type:String})],y.prototype,"url",void 0),y=p=t([u("esri.layers.support.SceneModifications")],y);const _=y;let o=class extends W(M(J(D(U(K(V(C))))))){constructor(...e){super(...e),this._handles=new P,this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.elevationInfo=null,this.path=null}destroy(){this._handles.destroy()}initialize(){this._handles.add(k(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,z))}normalizeCtorArgs(e,i){return typeof e=="string"?{url:e,...i}:e}readModifications(e,i,r){this._modificationsSource={url:E(e,r),context:r}}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const i=S(e,"signal");try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(r){G(r)}if(await this._fetchService(i),q(this._modificationsSource)){const r=await _.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",r,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,i)}beforeSave(){if(!F(this._modificationsSource))return this.load().then(()=>{},()=>{})}async saveAs(e,i){return this._debouncedSaveOperations(g.SAVE_AS,{...i,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(g.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new d("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new d("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new d("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}};t([a({type:String,readOnly:!0})],o.prototype,"geometryType",void 0),t([a({type:["show","hide"]})],o.prototype,"listMode",void 0),t([a({type:["IntegratedMeshLayer"]})],o.prototype,"operationalLayerType",void 0),t([a({json:{read:!1},readOnly:!0})],o.prototype,"type",void 0),t([a({type:H,readOnly:!0})],o.prototype,"nodePages",void 0),t([a({type:[X],readOnly:!0})],o.prototype,"materialDefinitions",void 0),t([a({type:[Y],readOnly:!0})],o.prototype,"textureSetDefinitions",void 0),t([a({type:[Z],readOnly:!0})],o.prototype,"geometryDefinitions",void 0),t([a({readOnly:!0})],o.prototype,"serviceUpdateTimeStamp",void 0),t([a({type:_}),m({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],o.prototype,"modifications",void 0),t([Q(["web-scene","portal-item"],"modifications")],o.prototype,"readModifications",null),t([a(B)],o.prototype,"elevationInfo",void 0),t([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),o=t([u("esri.layers.IntegratedMeshLayer")],o);const ne=o;export{ne as default};
